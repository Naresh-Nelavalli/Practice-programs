class Solution {
     String word = "";
    public String longestPalindrome(String s) {
        
         int i = 0;
        if (s.isEmpty() || s.length() == 1 || allCharactersSame(s))
            return s;
        while( i < s.length()-1){
            int l=i, r=i,  k=i;
            while(k < s.length() -1 && s.charAt(k) == s.charAt(k+1)){
                k=k+1;
                l=i-1;
                r=k+1;
            }
            String palind = s.substring(i,r);
            while ( l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)){
                palind = s.substring(l,r+1);
                l--;r++;
            }
            if (word.length() < palind.length()){
                word = palind;
            }
            i = k+1;
        }
        return word;
    }

    static boolean allCharactersSame(String s)
    {
        int n = s.length();
        for (int i = 1; i < n; i++)
            if (s.charAt(i) != s.charAt(0))
                return false;

        return true;
    }
}
